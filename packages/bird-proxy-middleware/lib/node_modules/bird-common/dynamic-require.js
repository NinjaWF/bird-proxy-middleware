var npath = require('path')
var fs = require('fs')
var touch = require('touch')

var _dynamicModules = []

module.exports = {
    init: function (configPath) {

        var checkDynamicModuleModification = function () {
            // 避免重复加载 动态模块的 timer
            if (global.SHOULD_INIT_DYNAMIC_REQUIRE_MODULE_TIMER) return
            global.SHOULD_INIT_DYNAMIC_REQUIRE_MODULE_TIMER = true

            setInterval(function () {
                var toRemoved = {}, foundChanged = false
                _dynamicModules.map(function (pathInfo) {
                    if (!fs.existsSync(pathInfo.path)) {
                        toRemoved[pathInfo.path] = 1
                    } else {
                        var stat = fs.statSync(pathInfo.path)
                        var mtime = new Date(stat.mtime).getTime()
                        if (mtime > pathInfo.mtime) {
                            console.log('@debug, path = ', pathInfo.path, mtime, pathInfo.mtime)
                            delete require.cache[pathInfo.path]
                            pathInfo.mtime = mtime
                            foundChanged = true
                        }
                    }
                })

                if (foundChanged) {
                    touch(configPath)
                }

                _dynamicModules = _dynamicModules.filter(function (pathInfo) {
                    return !toRemoved[pathInfo.path]
                })
            }, 2000)
        }
        checkDynamicModuleModification()

        /**
         * 添加 动态模块
         *
         * @param path
         */
        var addDynamicModule = function (path) {
            if (!_dynamicModules.some(function(module) {
                    return module.path == path
                })) {
                _dynamicModules.push({
                    path: path,
                    mtime: new Date().getTime()
                })
            }
        }

        /**
         * 用于为 bird 动态加载模块, 已解决 routes 的引用的更改需要重新启动bird
         *
         * @param path
         */
        var birdDynamicRequire = function (path) {
            if (/\/\./.exec(path)) {
                return;
            }
            if (path.substr(0, 1) == '.') {
                path = npath.resolve(npath.dirname(configPath) + '/' + path)
            }
            addDynamicModule(require.resolve(path))
            return require(path)
        }

        /**
         * 1. 目前为单层 module 查找
         *
         * @param path
         */
        var birdDynamicRequireModuleFolder = function(path) {
            if (path.substr(0, 1) == '.') {
                path = npath.resolve(npath.dirname(configPath) + '/' + path)
            }
            var files = fs.readdirSync(path)
            var allResult = []
            files.map(function(file) {
                allResult.push(birdDynamicRequire(path + '/' + file))
            })
            return allResult
        }

        global.birdDynamicRequire = birdDynamicRequire
        global.birdDynamicRequireModuleFolder = birdDynamicRequireModuleFolder
    }
}