var utils = require('common/utils')
var birdUtils = require('bird-common/utils')
var fs = require('fs');
var path = require('path');


var injectWeinre = function(filePath, weinreConfig, res) {
    var content = fs.readFileSync(filePath, "utf-8");
    var weinrePort = weinreConfig.port || 8080;
    var weinreScript = '<script src="http://'+ birdUtils.getIP() +':'+ weinrePort +'/target/target-script-min.js#anonymous' +'"></script>'
    content = content + weinreScript;
    res.write(content);
    res.end();
}



module.exports = function(config, hitRouteInfo, req, res, next) {
    var filePath = utils.p(config.staticFileRootDirPath + '/' + hitRouteInfo.route.static + '/' + hitRouteInfo.adjustedPathname);
    var fileStat = birdUtils.stat(filePath)

    // console.log('@debug, ', hitRouteInfo, filePath, fileStat)

    if (fileStat.exist) {
        var weinreConfig = config.weinre;
        // 如果目标为文件夹, 且我们设置了 defaultIndex 文件, 则看看这个文件在不在
        if (fileStat.isDirectory() && config.defaultIndex) {
            var indexFilePath = utils.p(filePath + '/' + config.defaultIndex)
            var indexFileStat = birdUtils.stat(indexFilePath)

            // console.log('@debug, ', indexFileStat)
            if (indexFileStat.exist && indexFileStat.isFile()) {
                if (weinreConfig && weinreConfig.open && path.extname(indexFilePath) === '.html') {
                    return injectWeinre(indexFilePath, weinreConfig, res);
                }
                else {
                    return res.sendFile(indexFilePath)
                }
            } else {
                next()
            }
        } else {
            if (weinreConfig && weinreConfig.open && path.extname(filePath) === '.html') {
                return injectWeinre(filePath, weinreConfig, res);
            }
            return res.sendFile(filePath)
        }
    } else {
        next()
    }
}
