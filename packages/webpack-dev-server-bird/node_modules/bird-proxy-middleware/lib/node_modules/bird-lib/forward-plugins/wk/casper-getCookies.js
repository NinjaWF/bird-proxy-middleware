var PARAMS = {
    targetUrl: '',

    selEnterpriseInput: '',
    enterpriseInputValue: '',

    selEnterpriseSuggestItem: '',
    selEnterpriseConfirmBtn: '',

    selUserName: '',
    userName: '',

    selPassword: '',
    password: '',

    selSubmit: '',

    cookieOutputPrefix: ''
};

// <PARAMS>

var casper = require('casper').create();
casper.start(PARAMS.targetUrl);

casper.then(function () {
    this.wait(2000, function () {
        if (this.exists(PARAMS.selEnterpriseInput)) {
            // 在企业输入框中输入, 并保持 focus, 输入百度
            this.sendKeys(PARAMS.selEnterpriseInput, PARAMS.enterpriseInputValue, {keepFocus: true});
            this.wait(200, function () {
                // 点击 suggest 出来的选项, 也就是百度
                this.click(PARAMS.selEnterpriseSuggestItem);
                // 点击下一步
                this.click(PARAMS.selEnterpriseConfirmBtn);
            });
        }
        else if (this.exists(PARAMS.selEnterpriseConfirmBtn)) {
            this.click(PARAMS.selEnterpriseConfirmBtn);
        }
        else {
            console.log('companyKey 可能已经设置了, 现在尝试用 UUAP 的流程走下去');
        }
    }).then(function () {
        if (this.exists(PARAMS.selUserName)) {
            console.log('username : ', PARAMS.userName);
        }

        this.wait(2000, function () {
            // TODO: 如果事件不够用了, 报出warning, 然后补时继续等待, 如果补时不够了, 就用报错, 并终止服务
            // 填入用户名
            this.sendKeys(PARAMS.selUserName, PARAMS.userName);
            // 填入密码
            this.sendKeys(PARAMS.selPassword, PARAMS.password);
            // 确定
            this.click(PARAMS.selSubmit);
        }).then(function () {
            this.wait(3000, function () {
                var cookies = this.page.cookies;

                var retResult = '';
                for (var i = cookies.length; i-- > 0;) {
                    var cookie = cookies[i];
                    if (cookie.name !== 'uss') {
                        retResult = retResult + cookie.name + '=' + cookie.value + ';';
                    }
                }

                console.log(PARAMS.cookieOutputPrefix + retResult);
            });
        });
    });
});

casper.run();
